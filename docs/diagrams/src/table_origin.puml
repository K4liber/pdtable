     def resolve(specificaton: str, orchestrator: Orchestrator, included_from: Optional[Location])
     	   # spec may not be unique: it can be relative to included_from
          if identifier is folder:
               for file in folder.glob(pattern):
                   orchestrator.add_source(file, identifier->location)
          else:
          	file_metadata, generator = handlers[identifier->protocol].read(identifier)

@startuml Table Origin

namespace load {
    class LoadIssue {
        load_item: LoadItem,
        location_file: None | LocationFile,
        location: None | LocationBlock,
        issue: str | Exception
    }

    interface LoadOrchestrator {
        + add_load_item(spec: LoadItem)
        + register_load_issue(load_issue)
    }

    interface Loader {
        + load(LoadItem, LoadOrchestrator) -> Iterator[Block]
    }
}

namespace table {
    class TableMetadata {
        + name
        + destinations
        + transposed
        + origin: TableOrigin

    }
    table_origin.TableOrigin -o TableMetadata
}

namespace table_origin {
    class LoadItem  {
        specification: str
        source: None | LoadLocation
        load_history() -> [LoadItem]
    }

    class LocationFolder {
        + local_folder_path: Path
        + load_specification: LoadItem
    }

    LoadItem o-- LoadLocation
    LoadLocation <|-- LocationBlock
    LoadLocation <|-- LocationFolder

    LoadItem --o LocationFolder

    interface LoadLocation {
        + local_folder_path: None | Path
        + load_identifier: str
        + open_interactive(read_only)
    }

    interface LocationFile {
        + load_specification: LoadItem 
        + load_identifier: str # unique
        + load_metadata: Any  # record metadata, modtime,...
        + open_interactive(sheet, row, read_only)  # may fail
        + local_path: None | Path
        + local_folder_path: None | Path
        + get_local_path(): Path # downloads if required
    }

    LoadItem  -o LocationFile

    class LocationSheet {
    + sheet_name: None | str
    + sheet_metadata: Any
    }

    LocationFile --o "file" LocationSheet

    class LocationBlock {
    + row: int
    }

    LocationSheet --o "sheet" LocationBlock


    interface TableOrigin {
        input_location: LocationBlock | None
        parents: [TableOrigin]
        operation: str | None
        input_ancestors: [LocationBlock]
    }

    LocationBlock -* TableOrigin
}

@enduml